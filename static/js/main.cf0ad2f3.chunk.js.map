{"version":3,"sources":["firebase/firebaseConfig.ts","redux/reducers/todos.ts","redux/reducers/index.ts","redux/store/store.ts","components/AuthButton.tsx","components/TodoItem.tsx","components/container.tsx","components/TodoList.tsx","components/AddTodo.tsx","containers/Home.tsx","components/InfoBlock.tsx","containers/Profile.tsx","components/OtherTodo.tsx","components/HistoryItem.tsx","components/Navigation.tsx","containers/App-wrapper.tsx","router/private-router.tsx","containers/History.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","appId","initialState","selectedTodo","completedTodo","privatedTodo","isPrivate","todos","todosInitial","rootReducer","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","state","action","type","todo","initializeApp","settings","enhancers","reduxFirestore","reactReduxFirebase","userProfile","useFirestoreForProfile","window","devToolsExtension","composedEnhancers","compose","store","createStore","connect","auth","firebaseConnect","props","isLoaded","isEmpty","Button","variant","onClick","login","provider","logout","CircularProgress","color","TodoItem","handleChange","event","value","target","setState","name","handleDone","checked","isDone","handlePrivate","handleEdit","isEdit","handleChangeComment","comment","handleClickOpen","open","handleClose","handleDelete","id","handleCancel","item","uid","date","handleSave","handleRefresh","prevProps","this","Box","display","flexDirection","mb","Card","CardContent","Input","placeholder","onChange","style","width","Typography","FormControlLabel","control","Checkbox","disabled","label","moment","duration","unix","asHours","seconds","toFixed","asDays","CardActions","to","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","DialogActions","Component","privateTodo","dispatch","selectTodo","firestoreConnect","Container","children","className","TodoList","collection","doc","set","Date","addHistory","delete","add","todoId","map","key","ordered","completTodo","where","AddTodo","handleDateChange","m","required","evt","utils","DateFnsUtils","ampm","format","KeyboardButtonProps","addTodo","Fab","aria-label","InfoBlock","title","size","isImage","p","bgcolor","border","borderRadius","borderColor","height","alt","src","displayName","email","createdAt","lastLoginAt","photoURL","OtherTodo","styles","padding","cursor","backgroundColor","push","todoItems","renderTodo","HistoryItem","historyItems","history","orderBy","Navigation","MenuOpen","MenuClose","classes","links","ClickAwayListener","onClickAway","root","Menu","navLink","MenuItem","textDecoration","href","e","preventDefault","AppBar","position","bar","Toolbar","IconButton","edge","menuButton","withStyles","theme","marginBottom","marginRight","spacing","flexGrow","AppWrapper","profileStore","React","PrivateRoute","component","rest","getState","render","pathname","from","location","History","match","params","App","exact","path","AuthButton","Home","Profile","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sRASeA,G,cATQ,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,4BACfK,MAAOL,wC,SCNIM,EAAe,CAC1BC,aAAc,KACdC,cAAe,KACfC,aAAc,KACdC,WAAW,GCCN,IAAMJ,EAAe,CAC1BK,MAAOC,GAGIC,EAAcC,YAAgB,CACzCC,SAAUC,kBACVC,UAAWC,mBACXP,MDLK,WAAyD,IAApCQ,EAAmC,uDAA3Bb,EAAcc,EAAa,uCAC7D,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,eACFF,EADL,CAEEZ,aAAca,EAAOE,OAEzB,IAAK,cACH,OAAO,eACFH,EADL,CAEEX,cAAeY,EAAOE,OAE1B,IAAK,cACH,OAAO,eACFH,EADL,CAEET,WAAYU,EAAOV,YAGvB,QACE,OAAOS,MEdbJ,IAASQ,cAAczB,GACvBiB,IAASE,YAAYO,SAAS,IAG9B,IAAMC,EAAmB,CACvBC,yBAAeX,KACfY,6BAAmBZ,IAAU,CAC3Ba,YAAa,QACbC,wBAAwB,KAGOC,OAA3BC,kBAQR,IAAMC,EAAyBC,IAAO,WAAP,EAC1BR,GAIUS,EAFDC,YAAYtB,EAAaP,EAAc0B,G,kBCerD,IAMeC,cACbG,aAPsB,SAACjB,GAAD,MAAiB,CACvCkB,KAAMlB,EAAMJ,SAASsB,QAGI,IAIzBC,4BAFaL,EA1Cf,SAAoBM,GAAgB,IAC1BxB,EAAmBwB,EAAnBxB,SAAUsB,EAASE,EAATF,KAClB,OAAKG,mBAASH,GAOVI,kBAAQJ,GAER,6BACE,qCACA,kBAACK,EAAA,EAAD,CACEC,QAAQ,WACRC,QACc,kBAAM7B,EAAS8B,MAAM,CAAEC,SAAU,SAAUzB,KAAM,YAHjE,uBAYJ,6BACE,kBAACqB,EAAA,EAAD,CACEC,QAAQ,WACRC,QAAS,kBAAM7B,EAASgC,WAF1B,WAtBA,8BACE,kBAACC,EAAA,EAAD,CAAkBC,MAAM,kB,4TCgC1BC,G,YACJ,WAAYX,GAAwB,IAAD,8BACjC,4CAAMA,KAsBAY,aAAe,SAACC,GAAgB,IAC9BC,EAAUD,EAAME,OAAhBD,MACR,EAAKE,SAAS,CAAEC,KAAMH,KAzBW,EA4B3BI,WAAa,SAACL,GAAgB,IAC5BM,EAAYN,EAAME,OAAlBI,QACR,EAAKH,SAAS,CAAEI,OAAQD,KA9BS,EAiC3BE,cAAgB,SAACR,GAAgB,IAC/BM,EAAYN,EAAME,OAAlBI,QACR,EAAKH,SAAS,CAAE7C,UAAWgD,KAnCM,EAsC3BG,WAAa,WACnB,EAAKN,SAAS,CAAEO,QAAQ,KAvCS,EA0C3BC,oBAAsB,SAACX,GAAgB,IACrCC,EAAUD,EAAME,OAAhBD,MACR,EAAKE,SAAS,CAAES,QAASX,KA5CQ,EA+C3BY,gBAAkB,WACxB,EAAKV,SAAS,CAAEW,MAAM,KAhDW,EAmD3BC,YAAc,WACpB,EAAKZ,SAAS,CAAEW,MAAM,KApDW,EAuD3BE,aAAe,WAAO,IACpBC,EAAuB,EAAKlD,MAA5BkD,IAERD,EADyB,EAAK7B,MAAtB6B,cACK,CAAEC,QA1DkB,EA6D3BC,aAAe,WAAO,IACpBC,EAAS,EAAKhC,MAAdgC,KACR,EAAKhB,SAAS,CACZiB,IAAKD,EAAKC,IACVH,GAAIE,EAAKF,GACTb,KAAMe,EAAKf,KACXG,OAAQY,EAAKZ,OACbjD,UAAW6D,EAAK7D,UAChB+D,KAAMF,EAAKE,KACXX,QAAQ,KAtEuB,EA0E3BY,WAAa,WAAO,IAAD,EAGL,EAAKvD,MADvBqD,EAFuB,EAEvBA,IAAKC,EAFkB,EAElBA,KAAMJ,EAFY,EAEZA,GAAIb,EAFQ,EAERA,KAAMG,EAFE,EAEFA,OAAQjD,EAFN,EAEMA,WAG/BgE,EADuB,EAAKnC,MAApBmC,YACG,CACTF,MAAKC,OAAMJ,KAAIb,OAAMG,SAAQjD,cAE/B,EAAK6C,SAAS,CAAEO,QAAQ,KAlFS,EAqF3Ba,cAAgB,WAAO,IAAD,EAGR,EAAKxD,MADvBqD,EAF0B,EAE1BA,IAAKH,EAFqB,EAErBA,GAAIb,EAFiB,EAEjBA,KAAMG,EAFW,EAEXA,OAAQjD,EAFG,EAEHA,UAAWsD,EAFR,EAEQA,SAGpCW,EAD0B,EAAKpC,MAAvBoC,eACM,CACZH,MAAKH,KAAIb,OAAMG,SAAQjD,YAAWsD,YAEpC,EAAKT,SAAS,CAAEO,QAAQ,KA3FxB,EAAK3C,MAAQ,CACXqD,IAAKjC,EAAMgC,KAAKC,IAChBH,GAAI9B,EAAMgC,KAAKF,GACfb,KAAMjB,EAAMgC,KAAKf,KACjBG,OAAQpB,EAAMgC,KAAKZ,OACnBjD,UAAW6B,EAAMgC,KAAK7D,UACtB+D,KAAMlC,EAAMgC,KAAKE,KACjBX,QAAQ,EACRE,QAAS,iBACTE,MAAM,GAXyB,E,gFAehBU,GAA4B,IACrCL,EAASM,KAAKtC,MAAdgC,KACJA,EAAKE,OAASG,EAAUL,KAAKE,MAE/BI,KAAKtB,SAAS,CAAEkB,KAAMF,EAAKE,S,+BA6ErB,IAAD,EAGHI,KAAK1D,MADP2C,EAFK,EAELA,OAAQW,EAFH,EAEGA,KAAMjB,EAFT,EAESA,KAAM9C,EAFf,EAEeA,UAAWiD,EAF1B,EAE0BA,OAAQO,EAFlC,EAEkCA,KAAMG,EAFxC,EAEwCA,GAAIL,EAF5C,EAE4CA,QAEnD,OACE,kBAACc,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,GAAI,GAC7C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAEMrB,EACE,kBAACsB,EAAA,EAAD,CACE/D,KAAK,OACLgE,YAAY,eACZhC,MAAOG,EACPA,KAAK,OACL8B,SAAUT,KAAK1B,aACfoC,MAAO,CAAEC,MAAO,UAIhB,kBAACC,GAAA,EAAD,KAAajC,GAGrB,6BACE,kBAACkC,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,UAAW/B,EACXN,KAAK,SACLE,QAASC,EACT2B,SAAUT,KAAKpB,aAGnBqC,MAAM,SAER,kBAACJ,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,UAAW/B,EACXJ,QAAShD,EACT4E,SAAUT,KAAKjB,cACfJ,KAAK,YACLH,MAAM,cAGVyC,MAAM,qBAGV,6BACGrB,EAEG,wCAEKsB,IAAOC,SAA2B,IAAlBD,MAASE,QAAeC,UAAaH,IAAOC,SAAwB,IAAfvB,EAAK0B,SAAgBD,WAAWE,QAAQ,GAC/G,KAGD,KACL3B,EAEG,uCAEKsB,IAAOC,SAA2B,IAAlBD,MAASE,QAAeI,SAAYN,IAAOC,SAAwB,IAAfvB,EAAK0B,SAAgBE,UAAUD,UACrG,KAGD,OAGV,kBAACE,EAAA,EAAD,KAEMxC,EACE,oCACE,kBAACpB,EAAA,EAAD,CACEC,QAAQ,WACRM,MAAM,UACNL,QAASiC,KAAKH,YAEd,kBAAC,IAAD,cAEF,kBAAChC,EAAA,EAAD,CACEC,QAAQ,WACRM,MAAM,UACNL,QAASiC,KAAKF,eAEd,kBAAC,IAAD,iBAEF,kBAACjC,EAAA,EAAD,CACEC,QAAQ,WACRM,MAAM,UACNL,QAASiC,KAAKT,cAEd,kBAAC,IAAD,qBAKF,kBAAC1B,EAAA,EAAD,CACEC,QAAQ,WACRM,MAAM,UACNL,QAASiC,KAAKP,cAEd,kBAAC,IAAD,sBAQF,oCACE,kBAAC5B,EAAA,EAAD,CACEC,QAAQ,WACRM,MAAM,UACNL,QAASiC,KAAKhB,YAEd,kBAAC,IAAD,cAEF,kBAAC,IAAD,CAAM0C,GAAE,mBAAclC,IACpB,kBAAC3B,EAAA,EAAD,CACEC,QAAQ,WACRM,MAAM,WAEN,kBAAC,IAAD,kBAGJ,6BACE,kBAACP,EAAA,EAAD,CAAQC,QAAQ,WAAWM,MAAM,UAAUL,QAASiC,KAAKZ,iBACvD,kBAAC,IAAD,6BAIF,kBAACuC,GAAA,EAAD,CACEtC,KAAMA,EACNuC,QAAS5B,KAAKV,YACduC,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAatC,GAAG,qBAAhB,WACA,kBAACuC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,+CAGA,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACP3C,GAAG,OACHhD,KAAK,OACLgC,MAAOW,EACPsB,SAAUT,KAAKd,oBACfkD,WAAS,KAGb,kBAACC,GAAA,EAAD,KACE,kBAACxE,EAAA,EAAD,CAAQE,QAASiC,KAAKV,YAAalB,MAAM,WAAzC,UAGA,kBAACP,EAAA,EAAD,CAAQE,QAASiC,KAAKV,YAAalB,MAAM,WAAzC,oB,GA7PLkE,aAsRRlF,eACbG,aAVsB,SAACjB,GAAD,MAAiB,CACvCiG,YAAajG,EAAMR,MAAMD,cAGA,SAAC2G,GAAD,MAAoB,CAC7CC,WAAY,SAAChG,GAAD,OAAe+F,EAAS,CAAEhG,KAAM,aAAcC,UAC1D8F,YAAa,SAAC1G,GAAD,OAAwB2G,EAAS,CAAEhG,KAAM,cAAeX,mBAKrE6G,6BAFatF,CAGbiB,ICzUWsE,GAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjC,2BAASC,UAAU,aAChBD,IC0BCE,G,2MACIjD,WAAa,YAEE,IADrBF,EACoB,EADpBA,IAAKC,EACe,EADfA,KAAMJ,EACS,EADTA,GAAIb,EACK,EADLA,KAAMG,EACD,EADCA,OAAQjD,EACT,EADSA,WAI7BkH,EAFsB,EAAKrF,MAAnBtB,UACA2G,YACG,SACRC,IAAIxD,GACJyD,IACC,CACEtE,OACAG,SACAa,MACA9D,YACA+D,U,EAKAE,cAAgB,YAED,IADrBH,EACoB,EADpBA,IAAKH,EACe,EADfA,GAAIb,EACW,EADXA,KAAMG,EACK,EADLA,OAAQjD,EACH,EADGA,UAAWsD,EACd,EADcA,SAIlC4D,EAFsB,EAAKrF,MAAnBtB,UACA2G,YACG,SACRC,IAAIxD,GACJyD,IACC,CACEtE,OACAG,SACAa,MACA9D,YACA+D,KAAM,IAAIsD,OAGhB,EAAKC,WAAW3D,EAAIL,I,EAGdI,aAAe,YAA6B,IAA1BC,EAAyB,EAAzBA,IAGxBuD,EAFsB,EAAKrF,MAAnBtB,UACA2G,YACG,SACRC,IAAIxD,GACJ4D,U,0EAGc5D,EAAoBL,GAA0B,IAAD,EACnCa,KAAKtC,MAAxBiC,EADsD,EACtDA,IADsD,EACjDvD,UACHiH,IACR,CAAEN,WAAY,WACd,CACEpD,MACA2D,OAAQ9D,EACRL,UACAS,KAAM,IAAIsD,S,+BAKN,IAAD,OACCpH,EAAekE,KAAKtC,MAApB5B,MAER,OACE,kBAAC,GAAD,KACE,6BAEgBA,EAAMyH,KAAI,SAAC7D,GAAD,OACR,kBAAC,GAAD,CACE8D,IAAK9D,EAAKF,GACVE,KAAMA,EACNG,WAAY,EAAKA,WACjBC,cAAe,EAAKA,cACpBP,aAAc,EAAKA,wB,GAxExB+C,aAgGRlF,eACbG,aAfsB,SAACjB,GAAD,MAAiB,CACvCqD,IAAKrD,EAAMJ,SAASsB,KAAKmC,IACzB7D,MAAOQ,EAAMF,UAAUqH,QAAQ3H,MAAQQ,EAAMF,UAAUqH,QAAQ3H,MAAQ,GACvEJ,aAAcY,EAAMR,MAAMJ,aAC1BC,cAAeW,EAAMR,MAAMH,cAC3BC,aAAcU,EAAMR,MAAMF,iBAGD,SAAC4G,GAAD,MAAoB,CAC7CC,WAAY,SAAChG,GAAD,OAAe+F,EAAS,CAAEhG,KAAM,aAAcC,UAC1DiH,YAAa,SAACjH,GAAD,OAAe+F,EAAS,CAAEhG,KAAM,cAAeC,UAC5D8F,YAAa,SAAC9F,GAAD,OAAe+F,EAAS,CAAEhG,KAAM,cAAeC,cAK5DiG,4BAAiB,SAAChF,GAAgB,IACxBiC,EAAajC,EAAbiC,IACR,OAAKA,EACE,CACL,CACEoD,WAAY,QACZY,MAAO,CACL,CAAC,MAAO,KAAMhE,MALH,MAJNvC,CAcb0F,I,4DC/GIc,G,YACJ,WAAYlG,GAAgB,IAAD,8BACzB,4CAAMA,KAUAmG,iBAAmB,SAACjE,GAC1B,EAAKlB,SAAS,CAAEkB,UAVhB,EAAKtD,MAAQ,CACXG,KAAM,GACNZ,WAAW,EACXiD,QAAQ,EACRc,KAAM,IAAIsD,MANa,E,uEAeR,IAAD,EACWlD,KAAKtC,MAAxBiC,EADQ,EACRA,IAAKvD,EADG,EACHA,UADG,EAIZ4D,KAAK1D,MADPG,EAHc,EAGdA,KAAMZ,EAHQ,EAGRA,UAAW+D,EAHH,EAGGA,KAAMd,EAHT,EAGSA,OAEzB1C,EAAUiH,IACR,CAAEN,WAAY,SACd,CACEpD,MACAhB,KAAMlC,EACNqC,SACAjD,YACA+D,SAGJI,KAAKtB,SAAS,CAAEjC,KAAM,O,+BAGd,IAAD,OAEP,IADgBuD,KAAKtC,MAAbiC,IACE,OAAO,KAFV,MAI2BK,KAAK1D,MAA/BG,EAJD,EAICA,KAAMZ,EAJP,EAIOA,UAAW+D,EAJlB,EAIkBA,KACzB,OACE,8BACE,kBAACS,EAAA,EAAD,KACE,kBAACJ,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAS2D,EAAG,GAC5C,kBAACvD,EAAA,EAAD,CACEwD,UAAQ,EACRvD,YAAY,iBACZhE,KAAK,OACLgC,MAAO/B,EACPgE,SAAU,SAACuD,GAAD,OAAS,EAAKtF,SAAS,CAAEjC,KAAMuH,EAAIvF,OAAOD,WAEtD,kBAAC,KAAD,CAAyByF,MAAOC,MAC9B,kBAAC,KAAD,CACEC,MAAM,EACNC,OAAO,mBACPjC,OAAO,SACP3C,GAAG,qBACHhB,MAAOoB,EACPa,SAAUT,KAAK6D,iBACfQ,oBAAqB,CACnB,aAAc,kBAIpB,kBAACxD,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACElC,QAAShD,EACT4E,SAAU,SAACuD,GAAD,OAAS,EAAKtF,SAAS,CAAE7C,UAAWmI,EAAIvF,OAAOI,WACzDL,MAAM,cAGVyC,MAAM,oBAER,kBAACpD,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAKuG,YAC1B,kBAACC,GAAA,EAAD,CAAKnG,MAAM,UAAUoG,aAAW,OAC9B,kBAAC,KAAD,e,GA3EMlC,aA2FPlF,eACbG,aAPsB,SAACjB,GAAD,MAAiB,CACvCqD,IAAKrD,EAAMJ,SAASsB,KAAKmC,OAGA,IAIzB+C,6BAFatF,CAGbwG,IC3GaxG,mBACbG,cADaH,EATf,WACE,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,UCDOqH,GAAsC,SAAC,GAAD,IACjDC,EADiD,EACjDA,MAAOlG,EAD0C,EAC1CA,MAAOmG,EADmC,EACnCA,KAAMC,EAD6B,EAC7BA,QAD6B,OAGjD,gBAAC3E,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACd0E,EAAG,EACHf,EAAG,EACHgB,QAAQ,mBACRC,OAAQ,EACRC,aAAc,GACdC,YAAY,gBAEZ,gBAAChF,EAAA,EAAD,CAAK4E,EAAG,EAAGf,EAAG,GACXY,GAGCE,EAEI,gBAAC3E,EAAA,EAAD,CAAK4E,EAAG,EAAGf,EAAG,GACZ,uBACEnD,MAAOgE,EACPO,OAAQP,EACRQ,IAAI,SACJC,IAAK5G,KAKT,gBAACyB,EAAA,EAAD,CAAK4E,EAAG,EAAGf,EAAG,GACXtF,KCGf,I,GAMepB,eACbG,aAPsB,SAACjB,GAAD,MAAiB,CACvCkB,KAAMlB,EAAMJ,SAASsB,QAGI,IAIzBC,4BAFaL,EAlCf,SAAiBM,GAAgB,IACvBF,EAASE,EAATF,KACR,OAAKG,mBAASH,GAQZ,kBAAC,GAAD,KACE,yBAAKkD,MAAO,CAAEC,MAAO,SACnB,kBAAC,GAAD,CAAW+D,MAAM,QAAQlG,MAAOhB,EAAK6H,cACrC,kBAAC,GAAD,CAAWX,MAAM,SAASlG,MAAOhB,EAAK8H,QACtC,kBAAC,GAAD,CACEZ,MAAM,qBACNlG,MAAO0C,IAAOE,KAAK5D,EAAK+H,UAAY,KAAMnB,OAAO,UAEnD,kBAAC,GAAD,CACEM,MAAM,mBACNlG,MAAO0C,IAAOE,KAAK5D,EAAKgI,YAAc,KAAMpB,OAAO,UAErD,kBAAC,GAAD,CAAWM,MAAM,UAAUlG,MAAOhB,EAAKiI,SAAUd,KAAK,MAAMC,SAAO,MAlBrE,8BACE,kBAACzG,EAAA,EAAD,CAAkBC,MAAM,kBCW1BsH,G,sLACoC,IAAD,OAA1BjJ,EAA0B,EAA1BA,KACLkJ,EAAiB,CACrBC,QAAS,OACTC,OAAQ,UACRC,gBAAiB,WAKnB,OAHIrJ,IAASuD,KAAKtC,MAAMhC,eACtBiK,EAAOG,gBAAkB,WAGzB,kBAAC7F,EAAA,EAAD,CAAKG,GAAI,GACP,kBAACC,EAAA,EAAD,CACEmD,IAAK/G,EAAKkC,KACV+B,MAAOiF,EACP5H,QAAS,kBAAM,EAAKL,MAAM+E,WAAWhG,KAErC,kBAACmE,GAAA,EAAD,KAAanE,EAAKkC,MAClB,kBAACiC,GAAA,EAAD,aAEE,kBAACG,EAAA,EAAD,CACElC,QAASpC,EAAKqC,OACdkC,UAAQ,KAGZ,kBAACJ,GAAA,EAAD,KACGnE,EAAKmD,KAEF,wCAEKsB,IAAOC,SAA2B,IAAlBD,MAASE,QAAeC,UAAaH,IAAOC,SAA6B,IAApB1E,EAAKmD,KAAK0B,SAAgBD,WAAWE,QAAQ,GACpH,KAGD,KACL9E,EAAKmD,KAEF,uCAEKsB,IAAOC,SAA2B,IAAlBD,MAASE,QAAeI,SAAYN,IAAOC,SAA6B,IAApB1E,EAAKmD,KAAK0B,SAAgBE,UAAUD,UAC1G,KAGD,U,+BAON,IAAD,OAECzF,EAAekE,KAAKtC,MAApB5B,MADM,GAERiK,KAAK,CAAErB,MAAO,QAAShD,GAAI,WACjC,IAAMsE,EAAYlK,EAAMyH,KACtB,SAAC7D,GAAD,OAAe,EAAKuG,WAAW,CAAExJ,KAAMiD,OAEzC,OACE,kBAAC,GAAD,KACE,6BACGsG,Q,GA5Da1D,aA6ETlF,eACbG,aAXsB,SAACjB,GAAD,MAAiB,CACvCqD,IAAKrD,EAAMJ,SAASsB,KAAKmC,IACzB7D,MAAOQ,EAAMF,UAAUqH,QAAQ3H,MAAQQ,EAAMF,UAAUqH,QAAQ3H,MAAQ,GACvEJ,aAAcY,EAAMR,MAAMJ,iBAGD,SAAC8G,GAAD,MAAoB,CAC7CC,WAAY,SAAChG,GAAD,OAAe+F,EAAS,CAAEhG,KAAM,aAAcC,cAK1DiG,4BAAiB,SAAChF,GAEhB,OADqBA,EAAbiC,IAED,CACL,CACEoD,WAAY,QACZY,MAAO,CACL,CAAC,YAAa,MAAM,MALT,MAJNvG,CAcbsI,ICzFIQ,G,sLACoC,IAA3BxG,EAA0B,EAA1BA,KACLiG,EAAiB,CACrBC,QAAS,OACTC,OAAQ,UACRC,gBAAiB,WAKnB,OAHIpG,IAASM,KAAKtC,MAAMhC,eACtBiK,EAAOG,gBAAkB,WAGzB,kBAAC7F,EAAA,EAAD,CAAKG,GAAI,GACP,kBAACC,EAAA,EAAD,CACEmD,IAAK9D,EAAKf,KACV+B,MAAOiF,GAEP,kBAAC/E,GAAA,EAAD,gBAEGlB,EAAKP,SAER,kBAACyB,GAAA,EAAD,iBAEGlB,EAAKE,KAEF,8BACG,IADH,UAGKsB,IAAOC,SAA2B,IAAlBD,MAASE,QAAeC,UAAaH,IAAOC,SAA6B,IAApBzB,EAAKE,KAAK0B,SAAgBD,WAAWE,QAAQ,GACpH,KAGD,KACL7B,EAAKE,KAEF,uCAEKsB,IAAOC,SAA2B,IAAlBD,MAASE,QAAeI,SAAYN,IAAOC,SAA6B,IAApBzB,EAAKE,KAAK0B,SAAgBE,UAAUD,UAC1G,KAGD,MAER,kBAACX,GAAA,EAAD,mBAGGM,IAA2B,IAApBxB,EAAKE,KAAK0B,SAAgB8C,OAAO,sC,+BAOzC,IAAD,OAED+B,EADmBnG,KAAKtC,MAAtB0I,QACqB7C,KAC3B,SAAC7D,GAAD,OAAe,EAAKuG,WAAW,CAAEvG,YAEnC,OACE,kBAAC,GAAD,KACE,6BACGyG,Q,GA5De7D,aA4EXlF,eACbG,aAVsB,SAACjB,GAAD,MAAiB,CACvCqD,IAAKrD,EAAMJ,SAASsB,KAAKmC,IACzByG,QAAS9J,EAAMF,UAAUqH,QAAQ2C,QAAU9J,EAAMF,UAAUqH,QAAQ2C,QAAU,OAGpD,SAAC5D,GAAD,MAAoB,CAC7CC,WAAY,SAAChG,GAAD,OAAe+F,EAAS,CAAEhG,KAAM,aAAcC,cAK1DiG,4BAAiB,SAAChF,GAAgB,IACxBiC,EAAgBjC,EAAhBiC,IACA2D,EAAmB5F,EAAnB4F,OACR,OAAK3D,EACE,CACL,CACEoD,WAAY,UACZY,MACY,CACE,CAAC,MAAO,KAAMhE,GACd,CAAC,SAAU,KAAM2D,IAE/B+C,QAAS,CAAC,OAAQ,UATL,MALNjJ,CAkBb8I,I,sGC3EII,G,YACJ,WAAY5I,GAAmB,IAAD,8BAC5B,4CAAMA,KAMA6I,SAAW,WACjB,EAAK7H,SAAS,CAAEW,MAAM,KARM,EAWtBmH,UAAY,WAClB,EAAK9H,SAAS,CAAEW,MAAM,KAVtB,EAAK/C,MAAQ,CACX+C,MAAM,GAHoB,E,sEAepB,IAAD,OACCoH,EAAYzG,KAAKtC,MAAjB+I,QACAC,EAAU1G,KAAKtC,MAAfgJ,MAEArH,EAASW,KAAK1D,MAAd+C,KAJD,EAKoBW,KAAKtC,MAAxBxB,EALD,EAKCA,SAAUsB,EALX,EAKWA,KAClB,OACE,kBAAC,GAAD,KACE,kBAACmJ,GAAA,EAAD,CAAmBC,YAAa5G,KAAKwG,WACnC,yBAAK3D,UAAW4D,EAAQI,MACtB,kBAACC,GAAA,EAAD,CAAMzH,KAAMA,KAGJqH,GACA,oCAEMA,EAAMnD,KAAI,SAACwD,GAAD,OACR,kBAACC,GAAA,EAAD,CAAUxD,IAAKuD,EAAQrC,MAAQqC,EAAQrF,GAAI3D,QAAS,EAAKyI,WAEnDO,EAAQrF,GAEJ,kBAAC,IAAD,CACEA,GAAIqF,EAAQrF,GACZtD,MAAM,UACNsC,MAAO,CAAEuG,eAAgB,SAEzB,kBAACrG,GAAA,EAAD,KAAamG,EAAQrC,QAIvB,uBACEhE,MAAO,CAAEuG,eAAgB,QACzBC,KAAK,IACLnJ,QAAS,SAACoJ,GACRA,EAAEC,iBACFL,EAAQhJ,YAGV,kBAAC6C,GAAA,EAAD,KAAamG,EAAQrC,cAWjD,kBAAC2C,GAAA,EAAD,CAAQC,SAAS,SAASzE,UAAW4D,EAAQc,KAC3C,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACE1J,QAASiC,KAAKuG,SACdmB,KAAK,QACL7E,UAAW4D,EAAQkB,WACnBvJ,MAAM,UACNoG,aAAW,QAEX,kBAAC,KAAD,OAEF,kBAAC,IAAD,CAAM9C,GAAG,IAAImB,UAAW4D,EAAQ/B,OAC9B,kBAAC9D,GAAA,EAAD,CAAY9C,QAAQ,KAAKM,MAAM,WAA/B,iBAKER,kBAAQJ,GACN,kBAACK,EAAA,EAAD,CACEO,MAAM,UACNL,QACU,kBAAM7B,EAAS8B,MAAM,CAAEC,SAAU,SAAUzB,KAAM,YAH7D,SAUE,oCACE,kBAACqB,EAAA,EAAD,CACEO,MAAM,UACNL,QAAS,kBAAM7B,EAASgC,WAF1B,UAMA,kBAAC,IAAD,CAAUwD,GAAG,gB,GApGdY,aAuHVlF,eACbG,aAPsB,SAACjB,GAAD,MAAiB,CACvCkB,KAAMlB,EAAMJ,SAASsB,QAGI,IAIxBoK,MA9JY,SAACC,GAAD,MAAiB,CAC9BhB,KAAM,CACJ3G,QAAS,QAEXqH,IAAK,CACHO,aAAc,QAEhBH,WAAY,CACVI,YAAaF,EAAMG,QAAQ,IAE7BtD,MAAO,CACLuD,SAAU,EACVhB,eAAgB,OAChB7I,MAAO,aAkJTX,4BAHaL,CAIbkJ,IC5JmB4B,GAFnB3K,aAVsB,SAACjB,GAAD,MAAiB,CACvC6L,aAAc7L,EAAMJ,SAASsB,Q,qLAa3B,IAAMkJ,EAAQ,GADP,EAE4B1G,KAAKtC,MAAhCkF,EAFD,EAECA,SAAUuF,EAFX,EAEWA,aAClB,OAAKxK,mBAASwK,IAOVA,EAAaxI,KACf+G,EAAMX,KAAK,CAAErB,MAAO,OAAQhD,GAAI,MAChCgF,EAAMX,KAAK,CAAErB,MAAO,QAAShD,GAAI,WACjCgF,EAAMX,KAAK,CAAErB,MAAO,UAAWhD,GAAI,cAEnCgF,EAAMX,KAAK,CAAErB,MAAO,QAAShD,GAAI,gBAIjC,wBAAMmB,UAAU,WACd,gBAAC,GAAD,CACE6D,MAAOA,IAER9D,IAlBD,4BACE,gBAACzE,EAAA,EAAD,CAAkBC,MAAM,mB,GAPMgK,e,aCVjC,SAASC,GAAa3K,GAA6B,IAAD,EACNA,EAAzCL,EAD+C,EAC/CA,MAAkBiF,EAD6B,EACxCgG,UAAyBC,EADe,sCAE/C5I,EAAStC,EAAMmL,WAAYtM,SAASsB,KAApCmC,IACR,OACE,gBAAC,IAAD,iBACM4I,EADN,CAEEE,OAAQ,SAAC/K,GAAD,OAAYiC,EAEhB,gBAAC2C,EAAc5E,GAGf,gBAAC,IAAD,CAAUgE,GAAI,CAAEgH,SAAU,cAAepM,MAAO,CAAEqM,KAAMjL,EAAMkL,iB,ICOlEC,G,2MACIhJ,WAAa,YAEE,IADrBF,EACoB,EADpBA,IAAKC,EACe,EADfA,KAAMJ,EACS,EADTA,GAAIb,EACK,EADLA,KAAMG,EACD,EADCA,OAAQjD,EACT,EADSA,WAI7BkH,EAFsB,EAAKrF,MAAnBtB,UACA2G,YACG,SACRC,IAAIxD,GACJyD,IACC,CACEtE,OACAG,SACAa,MACA9D,YACA+D,U,EAKAE,cAAgB,YAED,IADrBH,EACoB,EADpBA,IAAKH,EACe,EADfA,GAAIb,EACW,EADXA,KAAMG,EACK,EADLA,OAAQjD,EACH,EADGA,UAAWsD,EACd,EADcA,SAIlC4D,EAFsB,EAAKrF,MAAnBtB,UACA2G,YACG,SACRC,IAAIxD,GACJyD,IACC,CACEtE,OACAG,SACAa,MACA9D,YACA+D,KAAM,IAAIsD,OAGhB,EAAKC,WAAW3D,EAAIL,I,EAGdI,aAAe,YAA6B,IAA1BC,EAAyB,EAAzBA,IAGxBuD,EAFsB,EAAKrF,MAAnBtB,UACA2G,YACG,SACRC,IAAIxD,GACJ4D,U,0EAGc5D,EAAoBL,GAA0B,IAAD,EACnCa,KAAKtC,MAAxBiC,EADsD,EACtDA,IADsD,EACjDvD,UACHiH,IACR,CAAEN,WAAY,WACd,CACEpD,MACA2D,OAAQ9D,EACRL,UACAS,KAAM,IAAIsD,S,+BAKN,IAAD,OACCpH,EAAekE,KAAKtC,MAApB5B,MACAgN,EAAU9I,KAAKtC,MAAfoL,MACR,OACE,kBAAC,GAAD,KACE,oCACE,kBAAClI,GAAA,EAAD,CAAY9C,QAAQ,KAAKwK,UAAU,MAAnC,SAIcxM,EAAMyH,KAAI,SAAC7D,GAAD,OACR,kBAAC,GAAD,CACE8D,IAAK9D,EAAKF,GACVE,KAAMA,EACNG,WAAY,EAAKA,WACjBC,cAAe,EAAKA,cACpBP,aAAc,EAAKA,kBAIrC,kBAACqB,GAAA,EAAD,CAAY9C,QAAQ,KAAKwK,UAAU,MAAnC,YAGA,kBAAC,GAAD,CAAahF,OAAQwF,EAAMC,OAAOzF,e,GAlFtBhB,aAkGPlF,eACbG,aAVsB,SAACjB,GAAD,MAAiB,CACvCqD,IAAKrD,EAAMJ,SAASsB,KAAKmC,IACzB7D,MAAOQ,EAAMF,UAAUqH,QAAQ3H,MAAQQ,EAAMF,UAAUqH,QAAQ3H,MAAQ,OAG9C,eAMzB4G,4BAAiB,SAAChF,GAAgB,IACxBiC,EAAajC,EAAbiC,IACA2D,EAAgB5F,EAAMoL,MAAMC,OAA5BzF,OACR,OAAK3D,EACE,CACL,CACEoD,WAAY,QACZC,IAAKM,IAJQ,MALNlG,CAabyL,ICvGaG,OApBf,WACE,OACE,kBAAC,IAAD,CAAU3L,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAO4L,OAAK,EAACC,KAAK,cAAcZ,UAAWa,IAE3C,kBAACd,GAAD,CAAchL,MAAOA,EAAO4L,OAAK,EAACC,KAAK,IAAIZ,UAAWc,KACtD,kBAACf,GAAD,CAAchL,MAAOA,EAAO4L,OAAK,EAACC,KAAK,SAASZ,UAAW5C,KAC3D,kBAAC2C,GAAD,CAAchL,MAAOA,EAAO4L,OAAK,EAACC,KAAK,WAAWZ,UAAWe,KAC7D,kBAAChB,GAAD,CAAchL,MAAOA,EAAO4L,OAAK,EAACC,KAAK,WAAWZ,UAAWpC,KAC7D,kBAACmC,GAAD,CAAchL,MAAOA,EAAO4L,OAAK,EAACC,KAAK,mBAAmBZ,UAAWO,UCf7DS,QACW,cAA7BrM,OAAO2L,SAASW,UAEkB,UAA7BtM,OAAO2L,SAASW,UAEhBtM,OAAO2L,SAASW,SAAST,MAC1B,2DCZNU,IAASf,OAAO,kBAAC,GAAD,MAASgB,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.cf0ad2f3.chunk.js","sourcesContent":["const firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nexport default firebaseConfig;\n","export const initialState = {\n  selectedTodo: null,\n  completedTodo: null,\n  privatedTodo: null,\n  isPrivate: false,\n};\n\nexport function todoReducer(state = initialState, action: any) {\n  switch (action.type) {\n    case 'selectTodo':\n      return {\n        ...state,\n        selectedTodo: action.todo,\n      };\n    case 'completTodo':\n      return {\n        ...state,\n        completedTodo: action.todo,\n      };\n    case 'privateTodo':\n      return {\n        ...state,\n        isPrivate: !action.isPrivate,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { firebaseReducer } from 'react-redux-firebase';\nimport { firestoreReducer } from 'redux-firestore';\nimport { initialState as todosInitial, todoReducer } from './todos';\n\nexport const initialState = {\n  todos: todosInitial,\n};\n\nexport const rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n  todos: todoReducer,\n});\n","import { compose, createStore } from 'redux';\nimport { reactReduxFirebase } from 'react-redux-firebase';\nimport { reduxFirestore } from 'redux-firestore';\n\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport firebaseConfig from '../../firebase/firebaseConfig';\nimport { initialState, rootReducer } from '../reducers';\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({});\n\n\nconst enhancers: any[] = [\n  reduxFirestore(firebase),\n  reactReduxFirebase(firebase, {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n  }),\n];\nconst { devToolsExtension }: any = window;\nconst reduxDevToolsExtension = devToolsExtension;\nif (\n  process.env.NODE_ENV === 'development'\n    && typeof reduxDevToolsExtension === 'function'\n) {\n  enhancers.push(reduxDevToolsExtension());\n}\nconst composedEnhancers: any = compose(\n  ...enhancers,\n);\nconst store = createStore(rootReducer, initialState, composedEnhancers);\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect, isEmpty, isLoaded } from 'react-redux-firebase';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\ninterface IProps {\n  auth?: object;\n  firestore?: any;\n  firebase?: any;\n}\n\nfunction AuthButton(props: IProps) {\n  const { firebase, auth } = props;\n  if (!isLoaded(auth)) {\n    return (\n      <span>\n        <CircularProgress color=\"secondary\" />\n      </span>\n    );\n  }\n  if (isEmpty(auth)) {\n    return (\n      <div>\n        <div>4len</div>\n        <Button\n          variant=\"outlined\"\n          onClick={\n                        () => firebase.login({ provider: 'google', type: 'popup' })\n                    }\n        >\n                    Log in with Google\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        onClick={() => firebase.logout()}\n      >\n                Logout\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = {};\n\nexport default compose<any>(\n  connect(mapStateToProps, mapDispatchToProps),\n  firebaseConnect(),\n)(AuthButton);\n","import React, { Component } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport HistoryIcon from '@material-ui/icons/History';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Input } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport moment from 'moment';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\n\n\ninterface ITodoItemProps {\n  item: any;\n  firestore: object;\n  handleSave: any;\n  handleRefresh: any;\n  handleDelete: any;\n}\n\ninterface ITodoItemState {\n  uid: string;\n  id: string;\n  isEdit: boolean;\n  name: string;\n  isDone: boolean;\n  isPrivate: boolean;\n  date: any;\n  comment: string;\n  open: boolean;\n}\n\nclass TodoItem extends Component<ITodoItemProps, ITodoItemState> {\n  constructor(props: ITodoItemProps) {\n    super(props);\n    this.state = {\n      uid: props.item.uid,\n      id: props.item.id,\n      name: props.item.name,\n      isDone: props.item.isDone,\n      isPrivate: props.item.isPrivate,\n      date: props.item.date,\n      isEdit: false,\n      comment: 'Todo refreshed',\n      open: false,\n    };\n  }\n\n  componentDidUpdate(prevProps: ITodoItemProps) {\n    const { item } = this.props;\n    if (item.date !== prevProps.item.date) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ date: item.date });\n    }\n  }\n\n  private handleChange = (event: any) => {\n    const { value } = event.target;\n    this.setState({ name: value });\n  };\n\n  private handleDone = (event: any) => {\n    const { checked } = event.target;\n    this.setState({ isDone: checked });\n  };\n\n  private handlePrivate = (event: any) => {\n    const { checked } = event.target;\n    this.setState({ isPrivate: checked });\n  };\n\n  private handleEdit = () => {\n    this.setState({ isEdit: true });\n  };\n\n  private handleChangeComment = (event: any) => {\n    const { value } = event.target;\n    this.setState({ comment: value });\n  };\n\n  private handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  private handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  private handleDelete = () => {\n    const { id }: ITodoItemState = this.state;\n    const { handleDelete } = this.props;\n    handleDelete({ id });\n  };\n\n  private handleCancel = () => {\n    const { item } = this.props;\n    this.setState({\n      uid: item.uid,\n      id: item.id,\n      name: item.name,\n      isDone: item.isDone,\n      isPrivate: item.isPrivate,\n      date: item.date,\n      isEdit: false,\n    });\n  };\n\n  private handleSave = () => {\n    const {\n      uid, date, id, name, isDone, isPrivate,\n    }: ITodoItemState = this.state;\n    const { handleSave } = this.props;\n    handleSave({\n      uid, date, id, name, isDone, isPrivate,\n    });\n    this.setState({ isEdit: false });\n  };\n\n  private handleRefresh = () => {\n    const {\n      uid, id, name, isDone, isPrivate, comment,\n    }: ITodoItemState = this.state;\n    const { handleRefresh } = this.props;\n    handleRefresh({\n      uid, id, name, isDone, isPrivate, comment,\n    });\n    this.setState({ isEdit: false });\n  };\n\n  render() {\n    const {\n      isEdit, date, name, isPrivate, isDone, open, id, comment,\n    } = this.state;\n    return (\n      <Box display=\"flex\" flexDirection=\"column\" mb={1}>\n        <Card>\n          <CardContent>\n            {\n                isEdit ? (\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Add new task\"\n                    value={name}\n                    name=\"name\"\n                    onChange={this.handleChange}\n                    style={{ width: '100%' }}\n                  />\n                )\n                  : (\n                    <Typography>{name}</Typography>\n                  )\n              }\n            <div>\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    disabled={!isEdit}\n                    name=\"isDone\"\n                    checked={isDone}\n                    onChange={this.handleDone}\n                  />\n                    )}\n                label=\"Done\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    disabled={!isEdit}\n                    checked={isPrivate}\n                    onChange={this.handlePrivate}\n                    name=\"isPrivate\"\n                    value=\"isPrivate\"\n                  />\n                    )}\n                label=\"Task is private\"\n              />\n            </div>\n            <div>\n              {date\n                ? (\n                  <span>\nHours:\n                    {((moment.duration(moment().unix() * 1000).asHours()) - moment.duration(date.seconds * 1000).asHours()).toFixed(1)}\n                    {' '}\n\n                  </span>\n                ) : null}\n              {date\n                ? (\n                  <span>\nDays:\n                    {((moment.duration(moment().unix() * 1000).asDays()) - moment.duration(date.seconds * 1000).asDays()).toFixed()}\n                    {' '}\n\n                  </span>\n                ) : null}\n            </div>\n          </CardContent>\n          <CardActions>\n            {\n                isEdit ? (\n                  <>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={this.handleSave}\n                    >\n                      <SaveIcon>Save</SaveIcon>\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={this.handleRefresh}\n                    >\n                      <RefreshIcon>Refresh</RefreshIcon>\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={this.handleDelete}\n                    >\n                      <DeleteIcon>\n                              Delete\n                              item\n                      </DeleteIcon>\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={this.handleCancel}\n                    >\n                      <CancelIcon>\n                              Delete\n                              item\n                      </CancelIcon>\n                    </Button>\n                  </>\n                )\n                  : (\n                    <>\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={this.handleEdit}\n                      >\n                        <EditIcon>Edit</EditIcon>\n                      </Button>\n                      <Link to={`/history/${id}`}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                        >\n                          <HistoryIcon>History</HistoryIcon>\n                        </Button>\n                      </Link>\n                      <div>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n                          <CommentIcon>\n                                Comment for history\n                          </CommentIcon>\n                        </Button>\n                        <Dialog\n                          open={open}\n                          onClose={this.handleClose}\n                          aria-labelledby=\"form-dialog-title\"\n                        >\n                          <DialogTitle id=\"form-dialog-title\">Comment</DialogTitle>\n                          <DialogContent>\n                            <DialogContentText>\n                                  Enter the comment then view in history\n                            </DialogContentText>\n                            <TextField\n                              autoFocus\n                              margin=\"dense\"\n                              id=\"name\"\n                              type=\"text\"\n                              value={comment}\n                              onChange={this.handleChangeComment}\n                              fullWidth\n                            />\n                          </DialogContent>\n                          <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                  Cancel\n                            </Button>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                  Enter\n                            </Button>\n                          </DialogActions>\n                        </Dialog>\n                      </div>\n                    </>\n                  )\n              }\n          </CardActions>\n        </Card>\n      </Box>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  privateTodo: state.todos.isPrivate,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  selectTodo: (todo: any) => dispatch({ type: 'selectTodo', todo }),\n  privateTodo: (isPrivate: boolean) => dispatch({ type: 'privateTodo', isPrivate }),\n});\n\nexport default compose<any>(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(),\n)(TodoItem);\n","import * as React from 'react';\n\nexport const Container: React.FC = ({ children }) => (\n  <section className=\"container\">\n    {children}\n  </section>\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport TodoItem from './TodoItem';\nimport { Container } from './container';\n\ninterface ITodoItemState {\n  uid: string;\n  id: any;\n  isEdit: boolean;\n  name: string;\n  isDone: boolean;\n  isPrivate: boolean;\n  date: any;\n  comment: any;\n}\n\ninterface IProps {\n  uid?: string;\n  todos?: object;\n  selectedTodo?: object;\n  selectTodo?: any;\n  completedTodo?: object;\n  completTodo?: any;\n  ptivatedTodo?: object;\n  privateTodo?: any;\n  firestore?: any;\n}\n\nclass TodoList extends Component<IProps> {\n  private handleSave = ({\n    uid, date, id, name, isDone, isPrivate,\n  }: ITodoItemState) => {\n    const { firestore } = this.props;\n    const { collection }: any = firestore;\n    collection('todos')\n      .doc(id)\n      .set(\n        {\n          name,\n          isDone,\n          uid,\n          isPrivate,\n          date,\n        },\n      );\n  };\n\n  private handleRefresh = ({\n    uid, id, name, isDone, isPrivate, comment,\n  }: ITodoItemState) => {\n    const { firestore } = this.props;\n    const { collection }: any = firestore;\n    collection('todos')\n      .doc(id)\n      .set(\n        {\n          name,\n          isDone,\n          uid,\n          isPrivate,\n          date: new Date(),\n        },\n      );\n    this.addHistory(id, comment);\n  };\n\n  private handleDelete = ({ id }: ITodoItemState) => {\n    const { firestore } = this.props;\n    const { collection }: any = firestore;\n    collection('todos')\n      .doc(id)\n      .delete();\n  };\n\n  private addHistory(id: ITodoItemState, comment: ITodoItemState) {\n    const { uid, firestore } = this.props;\n    firestore.add(\n      { collection: 'history' },\n      {\n        uid,\n        todoId: id,\n        comment,\n        date: new Date(),\n      },\n    );\n  }\n\n  render() {\n    const { todos }: any = this.props;\n\n    return (\n      <Container>\n        <div>\n          {\n                        todos.map((item: any) => (\n                          <TodoItem\n                            key={item.id}\n                            item={item}\n                            handleSave={this.handleSave}\n                            handleRefresh={this.handleRefresh}\n                            handleDelete={this.handleDelete}\n                          />\n                        ))\n                    }\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  uid: state.firebase.auth.uid,\n  todos: state.firestore.ordered.todos ? state.firestore.ordered.todos : [],\n  selectedTodo: state.todos.selectedTodo,\n  completedTodo: state.todos.completedTodo,\n  privatedTodo: state.todos.privatedTodo,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  selectTodo: (todo: any) => dispatch({ type: 'selectTodo', todo }),\n  completTodo: (todo: any) => dispatch({ type: 'completTodo', todo }),\n  privateTodo: (todo: any) => dispatch({ type: 'privateTodo', todo }),\n});\n\nexport default compose<any>(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect((props: any) => {\n    const { uid }: any = props;\n    if (!uid) return [];\n    return [\n      {\n        collection: 'todos',\n        where: [\n          ['uid', '==', uid],\n        ],\n      },\n    ];\n  }),\n)(TodoList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport Card from '@material-ui/core/Card';\nimport { Box } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\ninterface IProps {\n  uid?: string;\n  isDone?: boolean;\n  date?: any;\n  firestore?: any;\n}\n\ninterface IState {\n  todo: string;\n  isPrivate: boolean;\n  isDone: boolean;\n  date?: any;\n}\n\nclass AddTodo extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      todo: '',\n      isPrivate: true,\n      isDone: false,\n      date: new Date(),\n    };\n  }\n\n\n  private handleDateChange = (date: Date | null) => {\n    this.setState({ date });\n  };\n\n  private addTodo() {\n    const { uid, firestore } = this.props;\n    const {\n      todo, isPrivate, date, isDone,\n    } = this.state;\n    firestore.add(\n      { collection: 'todos' },\n      {\n        uid,\n        name: todo,\n        isDone,\n        isPrivate,\n        date,\n      },\n    );\n    this.setState({ todo: '' });\n  }\n\n  render() {\n    const { uid } = this.props;\n    if (!uid) return null;\n\n    const { todo, isPrivate, date } = this.state;\n    return (\n      <span>\n        <Card>\n          <Box display=\"flex\" flexDirection=\"column\" m={1}>\n            <Input\n              required\n              placeholder=\"Enter new task\"\n              type=\"text\"\n              value={todo}\n              onChange={(evt) => this.setState({ todo: evt.target.value })}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDateTimePicker\n                ampm={false}\n                format=\"dd/MM/yyyy HH:mm\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                value={date}\n                onChange={this.handleDateChange}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </MuiPickersUtilsProvider>\n            <FormControlLabel\n              control={(\n                <Checkbox\n                  checked={isPrivate}\n                  onChange={(evt) => this.setState({ isPrivate: evt.target.checked })}\n                  value=\"isPrivate\"\n                />\n                )}\n              label=\"Task is private\"\n            />\n            <Button onClick={() => this.addTodo()}>\n              <Fab color=\"primary\" aria-label=\"add\">\n                <AddIcon />\n              </Fab>\n            </Button>\n          </Box>\n        </Card>\n      </span>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  uid: state.firebase.auth.uid,\n});\n\nconst mapDispatchToProps = {};\n\nexport default compose<any>(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect(),\n)(AddTodo);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport TodoList from '../components/TodoList';\nimport AddTodo from '../components/AddTodo';\nimport { Container } from '../components/container';\n\nfunction Home() {\n  return (\n    <Container>\n      <TodoList />\n      <AddTodo />\n    </Container>\n  );\n}\n\nexport default compose<any>(\n  connect(),\n)(Home);\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\n\ninterface InfoBlockProps {\n  title: string;\n  value: string;\n  size?: string;\n  isImage?: boolean;\n}\n\nexport const InfoBlock: React.FC<InfoBlockProps> = ({\n  title, value, size, isImage,\n}: InfoBlockProps) => (\n  <Box\n    display=\"flex\"\n    flexDirection=\"row\"\n    p={1}\n    m={1}\n    bgcolor=\"background.paper\"\n    border={1}\n    borderRadius={16}\n    borderColor=\"primary.main\"\n  >\n    <Box p={1} m={1}>\n      {title}\n    </Box>\n    {\n        isImage\n          ? (\n            <Box p={1} m={1}>\n              <img\n                width={size}\n                height={size}\n                alt=\"Avatar\"\n                src={value}\n              />\n            </Box>\n          )\n          : (\n            <Box p={1} m={1}>\n              {value}\n            </Box>\n          )\n      }\n  </Box>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect, isLoaded } from 'react-redux-firebase';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport moment from 'moment';\nimport { Container } from '../components/container';\nimport { InfoBlock } from '../components/InfoBlock';\n\ninterface IProps {\n  auth?: any;\n  firestore?: any;\n  firebase?: any;\n}\n\nfunction Profile(props: IProps) {\n  const { auth } = props;\n  if (!isLoaded(auth)) {\n    return (\n      <span>\n        <CircularProgress color=\"secondary\" />\n      </span>\n    );\n  }\n  return (\n    <Container>\n      <div style={{ width: '100%' }}>\n        <InfoBlock title=\"Name:\" value={auth.displayName} />\n        <InfoBlock title=\"Email:\" value={auth.email} />\n        <InfoBlock\n          title=\"Registration date:\"\n          value={moment.unix(auth.createdAt / 1000).format('LLLL')}\n        />\n        <InfoBlock\n          title=\"Last login date:\"\n          value={moment.unix(auth.lastLoginAt / 1000).format('LLLL')}\n        />\n        <InfoBlock title=\"Avatar:\" value={auth.photoURL} size=\"100\" isImage />\n      </div>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = {};\n\nexport default compose<any>(\n  connect(mapStateToProps, mapDispatchToProps),\n  firebaseConnect(),\n)(Profile);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport moment from 'moment';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport { Box } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { Container } from './container';\n\ninterface IProps {\n  uid?: string;\n  todos?: object;\n  selectedTodo?: object;\n  selectTodo?: any;\n  completedTodo?: object;\n  completTodo?: any;\n  firestore?: object;\n}\n\ninterface RenderTodoParams {\n  todo: any;\n}\n\ninterface Styles {\n  padding: any;\n  cursor: any;\n  backgroundColor: any;\n}\n\nclass OtherTodo extends Component<IProps, any> {\n  renderTodo({ todo }: RenderTodoParams) {\n    const styles: Styles = {\n      padding: '1rem',\n      cursor: 'pointer',\n      backgroundColor: '#ffffff',\n    };\n    if (todo === this.props.selectedTodo) {\n      styles.backgroundColor = '#988afe';\n    }\n    return (\n      <Box mb={1}>\n        <Card\n          key={todo.name}\n          style={styles}\n          onClick={() => this.props.selectTodo(todo)}\n        >\n          <Typography>{todo.name}</Typography>\n          <Typography>\n                        Done:\n            <Checkbox\n              checked={todo.isDone}\n              disabled\n            />\n          </Typography>\n          <Typography>\n            {todo.date\n              ? (\n                <span>\nHours:\n                  {((moment.duration(moment().unix() * 1000).asHours()) - moment.duration(todo.date.seconds * 1000).asHours()).toFixed(1)}\n                  {' '}\n\n                </span>\n              ) : null}\n            {todo.date\n              ? (\n                <span>\nDays:\n                  {((moment.duration(moment().unix() * 1000).asDays()) - moment.duration(todo.date.seconds * 1000).asDays()).toFixed()}\n                  {' '}\n\n                </span>\n              ) : null}\n          </Typography>\n        </Card>\n      </Box>\n    );\n  }\n\n  render() {\n    const links = [];\n    const { todos }: any = this.props;\n    links.push({ title: 'other', to: '/other' });\n    const todoItems = todos.map(\n      (item: any) => this.renderTodo({ todo: item }),\n    );\n    return (\n      <Container>\n        <div>\n          {todoItems}\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  uid: state.firebase.auth.uid,\n  todos: state.firestore.ordered.todos ? state.firestore.ordered.todos : [],\n  selectedTodo: state.todos.selectedTodo,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  selectTodo: (todo: any) => dispatch({ type: 'selectTodo', todo }),\n});\n\nexport default compose<any>(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect((props: any) => {\n    const { uid }: any = props;\n    if (!uid) return [];\n    return [\n      {\n        collection: 'todos',\n        where: [\n          ['isPrivate', '==', false],\n        ],\n      },\n    ];\n  }),\n)(OtherTodo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport moment from 'moment';\nimport Card from '@material-ui/core/Card';\nimport { Box } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { Container } from './container';\n\n\ninterface IProps {\n  uid?: string;\n  todoId?: string;\n  todos?: object;\n  history?: object;\n  selectedTodo?: object;\n  selectTodo?: any;\n  completedTodo?: object;\n  completTodo?: any;\n  firestore?: object;\n}\n\ninterface RenderTodoParams {\n  item: any;\n}\n\ninterface Styles {\n  padding: any;\n  cursor: any;\n  backgroundColor: any;\n}\n\nclass HistoryItem extends Component<IProps, any> {\n  renderTodo({ item }: RenderTodoParams) {\n    const styles: Styles = {\n      padding: '1rem',\n      cursor: 'pointer',\n      backgroundColor: '#ffffff',\n    };\n    if (item === this.props.selectedTodo) {\n      styles.backgroundColor = '#988afe';\n    }\n    return (\n      <Box mb={1}>\n        <Card\n          key={item.name}\n          style={styles}\n        >\n          <Typography>\n                        Comment:\n            {item.comment}\n          </Typography>\n          <Typography>\n                        Time ago:\n            {item.date\n              ? (\n                <span>\n                  {' '}\n                                    Hours:\n                  {((moment.duration(moment().unix() * 1000).asHours()) - moment.duration(item.date.seconds * 1000).asHours()).toFixed(1)}\n                  {' '}\n\n                </span>\n              ) : null}\n            {item.date\n              ? (\n                <span>\nDays:\n                  {((moment.duration(moment().unix() * 1000).asDays()) - moment.duration(item.date.seconds * 1000).asDays()).toFixed()}\n                  {' '}\n\n                </span>\n              ) : null}\n          </Typography>\n          <Typography>\n                        Updated\n                        at:\n            {moment(item.date.seconds * 1000).format('dddd, MMMM Do YYYY, h:mm:ss a')}\n          </Typography>\n        </Card>\n      </Box>\n    );\n  }\n\n  render() {\n    const { history }: any = this.props;\n    const historyItems = history.map(\n      (item: any) => this.renderTodo({ item }),\n    );\n    return (\n      <Container>\n        <div>\n          {historyItems}\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  uid: state.firebase.auth.uid,\n  history: state.firestore.ordered.history ? state.firestore.ordered.history : [],\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  selectTodo: (todo: any) => dispatch({ type: 'selectTodo', todo }),\n});\n\nexport default compose<any>(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect((props: any) => {\n    const { uid }: IProps = props;\n    const { todoId }: IProps = props;\n    if (!uid) return [];\n    return [\n      {\n        collection: 'history',\n        where:\n                    [\n                      ['uid', '==', uid],\n                      ['todoId', '==', todoId],\n                    ],\n        orderBy: ['date', 'desc'],\n      },\n    ];\n  }),\n)(HistoryItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect, isEmpty } from 'react-redux-firebase';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n  AppBar, IconButton, Menu, MenuItem, Toolbar, Typography,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link, Redirect } from 'react-router-dom';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { Container } from './container';\n\n\nconst styles = (theme: any) => ({\n  root: {\n    display: 'flex',\n  },\n  bar: {\n    marginBottom: '10px',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textDecoration: 'none',\n    color: 'white',\n  },\n});\n\ninterface IState {\n  open: boolean;\n}\n\ninterface INavLink {\n  title: string;\n  to?: string;\n\n  onClick?(): void;\n\n}\n\ninterface INavProps {\n  links?: INavLink[];\n  auth?: any;\n  firestore?: any;\n  firebase?: any;\n  classes?: any;\n}\n\nclass Navigation extends Component<INavProps, IState> {\n  constructor(props: INavProps) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  private MenuOpen = () => {\n    this.setState({ open: true });\n  };\n\n  private MenuClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { links } = this.props;\n\n    const { open } = this.state;\n    const { firebase, auth } = this.props;\n    return (\n      <Container>\n        <ClickAwayListener onClickAway={this.MenuClose}>\n          <div className={classes.root}>\n            <Menu open={open}>\n\n              {\n                  !!links && (\n                    <>\n                        {\n                          links.map((navLink) => (\n                            <MenuItem key={navLink.title + navLink.to} onClick={this.MenuClose}>\n                              {\n                                  navLink.to\n                                    ? (\n                                      <Link\n                                        to={navLink.to}\n                                        color=\"inherit\"\n                                        style={{ textDecoration: 'none' }}\n                                      >\n                                        <Typography>{navLink.title}</Typography>\n                                      </Link>\n                                    )\n                                    : (\n                                      <a\n                                        style={{ textDecoration: 'none' }}\n                                        href=\"/\"\n                                        onClick={(e) => {\n                                          e.preventDefault();\n                                          navLink.onClick!!();\n                                        }}\n                                      >\n                                        <Typography>{navLink.title}</Typography>\n                                      </a>\n                                    )\n                                }\n                            </MenuItem>\n                          ))\n                        }\n                    </>\n                  )\n                }\n            </Menu>\n            <AppBar position=\"static\" className={classes.bar}>\n              <Toolbar>\n                <IconButton\n                  onClick={this.MenuOpen}\n                  edge=\"start\"\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Link to=\"/\" className={classes.title}>\n                  <Typography variant=\"h6\" color=\"inherit\">\n                      Shit Counter\n                  </Typography>\n                </Link>\n                {\n                    isEmpty(auth) ? (\n                      <Button\n                        color=\"inherit\"\n                        onClick={\n                                  () => firebase.login({ provider: 'google', type: 'popup' })\n                                }\n                      >\n                              Login\n                      </Button>\n                    )\n                      : (\n                        <>\n                          <Button\n                            color=\"inherit\"\n                            onClick={() => firebase.logout()}\n                          >\n                                Logout\n                          </Button>\n                          <Redirect to=\"/\" />\n                        </>\n                      )\n                  }\n              </Toolbar>\n            </AppBar>\n          </div>\n        </ClickAwayListener>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = {};\n\nexport default compose<any>(\n  connect(mapStateToProps, mapDispatchToProps),\n  (withStyles(styles) as any),\n  firebaseConnect(),\n)(Navigation);\n","import * as React from 'react';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Navigation from '../components/Navigation';\n\nconst mapStateToProps = (state: any) => ({\n  profileStore: state.firebase.auth,\n});\n\ninterface IAppWrapperProps {\n  profileStore?: any;\n\n  dispatch?: Dispatch<any>;\n}\n\n@(connect as any)(mapStateToProps)\n\nexport default class AppWrapper extends React.Component<IAppWrapperProps> {\n  render() {\n    const links = [];\n    const { children, profileStore } = this.props;\n    if (!isLoaded(profileStore)) {\n      return (\n        <span>\n          <CircularProgress color=\"secondary\" />\n        </span>\n      );\n    }\n    if (profileStore.uid) {\n      links.push({ title: 'Home', to: '/' });\n      links.push({ title: 'Other', to: '/other' });\n      links.push({ title: 'Profile', to: '/profile' });\n    } else {\n      links.push({ title: 'Login', to: '/auth/login' });\n    }\n\n    return (\n      <main className=\"wrapper\">\n        <Navigation\n          links={links}\n        />\n        {children}\n      </main>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Store } from 'redux';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\n\n\ninterface IPrivateRouterProps extends RouteProps {\n  store: Store<any>;\n}\n\nexport function PrivateRoute(props: IPrivateRouterProps) {\n  const { store, component: Component, ...rest } = props as any;\n  const { uid } = (store.getState()).firebase.auth;\n  return (\n    <Route\n      {...rest}\n      render={(props) => (uid\n        ? (\n          <Component {...props} />\n        )\n        : (\n          <Redirect to={{ pathname: '/auth/login', state: { from: props.location } }} />\n        ))}\n    />\n  );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport Typography from '@material-ui/core/Typography';\nimport { Container } from '../components/container';\nimport HistoryItem from '../components/HistoryItem';\nimport TodoItem from '../components/TodoItem';\n\ninterface IProps {\n  uid?: string;\n  todos?: object;\n  firestore?: any;\n  match: any;\n}\n\ninterface ITodoItemState {\n  uid: string;\n  id: any;\n  isEdit: boolean;\n  name: string;\n  isDone: boolean;\n  isPrivate: boolean;\n  date: any;\n  comment: any;\n}\n\nclass History extends Component<IProps, any> {\n  private handleSave = ({\n    uid, date, id, name, isDone, isPrivate,\n  }: ITodoItemState) => {\n    const { firestore } = this.props;\n    const { collection }: any = firestore;\n    collection('todos')\n      .doc(id)\n      .set(\n        {\n          name,\n          isDone,\n          uid,\n          isPrivate,\n          date,\n        },\n      );\n  };\n\n  private handleRefresh = ({\n    uid, id, name, isDone, isPrivate, comment,\n  }: ITodoItemState) => {\n    const { firestore } = this.props;\n    const { collection }: any = firestore;\n    collection('todos')\n      .doc(id)\n      .set(\n        {\n          name,\n          isDone,\n          uid,\n          isPrivate,\n          date: new Date(),\n        },\n      );\n    this.addHistory(id, comment);\n  };\n\n  private handleDelete = ({ id }: ITodoItemState) => {\n    const { firestore } = this.props;\n    const { collection }: any = firestore;\n    collection('todos')\n      .doc(id)\n      .delete();\n  };\n\n  private addHistory(id: ITodoItemState, comment: ITodoItemState) {\n    const { uid, firestore } = this.props;\n    firestore.add(\n      { collection: 'history' },\n      {\n        uid,\n        todoId: id,\n        comment,\n        date: new Date(),\n      },\n    );\n  }\n\n  render() {\n    const { todos }: any = this.props;\n    const { match } = this.props;\n    return (\n      <Container>\n        <>\n          <Typography variant=\"h6\" component=\"h3\">\n                        Task:\n          </Typography>\n          {\n                        todos.map((item: any) => (\n                          <TodoItem\n                            key={item.id}\n                            item={item}\n                            handleSave={this.handleSave}\n                            handleRefresh={this.handleRefresh}\n                            handleDelete={this.handleDelete}\n                          />\n                        ))\n                    }\n          <Typography variant=\"h6\" component=\"h3\">\n                        History:\n          </Typography>\n          <HistoryItem todoId={match.params.todoId} />\n        </>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  uid: state.firebase.auth.uid,\n  todos: state.firestore.ordered.todos ? state.firestore.ordered.todos : [],\n});\n\nconst mapDispatchToProps = () => {\n\n};\n\nexport default compose<any>(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect((props: any) => {\n    const { uid }: any = props;\n    const { todoId }: any = props.match.params;\n    if (!uid) return [];\n    return [\n      {\n        collection: 'todos',\n        doc: todoId,\n      },\n    ];\n  }),\n)(History);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport store from './redux/store/store';\nimport AuthButton from './components/AuthButton';\nimport Home from './containers/Home';\nimport Profile from './containers/Profile';\nimport OtherTodo from './components/OtherTodo';\nimport HistoryItem from './components/HistoryItem';\nimport AppWrapper from './containers/App-wrapper';\nimport { PrivateRoute } from './router/private-router';\nimport History from './containers/History';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <AppWrapper>\n            <Route exact path=\"/auth/login\" component={AuthButton} />\n\n            <PrivateRoute store={store} exact path=\"/\" component={Home} />\n            <PrivateRoute store={store} exact path=\"/other\" component={OtherTodo} />\n            <PrivateRoute store={store} exact path=\"/profile\" component={Profile} />\n            <PrivateRoute store={store} exact path=\"/history\" component={HistoryItem} />\n            <PrivateRoute store={store} exact path=\"/history/:todoId\" component={History} />\n          </AppWrapper>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}